import { initializeApp } from 'firebase/app';
import { getFirestore, collection, getDocs } from 'firebase/firestore';
import type { MenuItem } from '../types';

// ===================================================================================
// 游댠 춰ACCI칍N REQUERIDA! 游댠
//
// Reemplaza este objeto de configuraci칩n de marcador de posici칩n con la configuraci칩n
// real de tu proyecto de Firebase.
//
// Puedes encontrarla en la Consola de Firebase -> Configuraci칩n del Proyecto -> General -> Tus apps
// -> SDK de Firebase -> Configuraci칩n (CDN).
//
// 춰Mientras no lo reemplaces, la aplicaci칩n funcionar치 con datos de muestra!
// ===================================================================================
const firebaseConfig = {
  apiKey: "AIzaSyCCuaPZhg4MtlTHV-JzDKEOiG1Lb3pVg4U",
  authDomain: "rincon-de-lore.firebaseapp.com",
  projectId: "rincon-de-lore",
  storageBucket: "rincon-de-lore.appspot.com",
  messagingSenderId: "1023054561981",
  appId: "1:1023054561981:web:1a98228f741c1732cc2dd4",
  measurementId: "G-619DPFRWGS"
};


// --- DATOS DE MUESTRA ---
// Estos datos se usar치n si la configuraci칩n de Firebase no es v치lida o la conexi칩n falla.
const mockMenuItems: MenuItem[] = [
  { id: 'mock1', name: 'Chilaquiles Rojos', description: 'Totopos de ma칤z ba침ados en salsa roja, con crema, queso, cebolla y pollo.', price: 120, imageUrl: 'https://res.cloudinary.com/dsmzpsool/image/upload/v1755635606/chilaquiles_rojos_j1g8zq.jpg', category: 'Desayuno', day: 'Lunes' },
  { id: 'mock2', name: 'Huevos Rancheros', description: 'Dos huevos estrellados sobre tortillas de ma칤z, ba침ados en salsa de jitomate.', price: 100, imageUrl: 'https://res.cloudinary.com/dsmzpsool/image/upload/v1755635607/huevos_rancheros_c2v6wu.jpg', category: 'Desayuno', day: 'Martes' },
  { id: 'mock3', name: 'Enchiladas Suizas', description: 'Tortillas rellenas de pollo, ba침adas en una cremosa salsa verde y gratinadas con queso.', price: 135, imageUrl: 'https://res.cloudinary.com/dsmzpsool/image/upload/v1755635607/enchiladas_suizas_vysv7n.jpg', category: 'Desayuno', day: 'Mi칠rcoles' },
  { id: 'mock4', name: 'Torta Ahogada', description: 'Birote relleno de carnitas de cerdo, ba침ado en salsa de jitomate y chile.', price: 110, imageUrl: 'https://res.cloudinary.com/dsmzpsool/image/upload/v1755635608/torta_ahogada_c7ozaq.jpg', category: 'Comida', day: 'Jueves' },
  { id: 'mock5', name: 'Mole Poblano', description: 'Pechuga de pollo ba침ada en el tradicional mole poblano, servido con arroz rojo.', price: 150, imageUrl: 'https://res.cloudinary.com/dsmzpsool/image/upload/v1755635608/mole_poblano_d9e5f1.jpg', category: 'Comida', day: 'Viernes' },
  { id: 'mock6', name: 'Tacos al Pastor', description: 'Tres tacos de carne de cerdo marinada, servidos con pi침a, cebolla y cilantro.', price: 95, imageUrl: 'https://res.cloudinary.com/dsmzpsool/image/upload/v1755635608/tacos_pastor_n6qrqd.jpg', category: 'Comida', day: 'S치bado' },
  { id: 'mock7', name: 'Agua de Horchata', description: 'Refrescante bebida de arroz con canela y un toque de vainilla.', price: 40, imageUrl: 'https://res.cloudinary.com/dsmzpsool/image/upload/v1755635606/agua_horchata_o3zw3u.jpg', category: 'Bebidas', day: 'Everyday' },
  { id: 'mock8', name: 'Agua de Jamaica', description: 'Agua fresca preparada con la flor de jamaica, ligeramente endulzada.', price: 40, imageUrl: 'https://res.cloudinary.com/dsmzpsool/image/upload/v1755635606/agua_jamaica_c8b1wz.jpg', category: 'Bebidas', day: 'Everyday' },
  { id: 'mock9', name: 'Caf칠 de Olla', description: 'Caf칠 tradicional mexicano endulzado con piloncillo y un toque de canela.', price: 35, imageUrl: 'https://res.cloudinary.com/dsmzpsool/image/upload/v1755635606/cafe_olla_b9r6df.jpg', category: 'Bebidas', day: 'Everyday' },
  { id: 'mock10', name: 'Chiles en Nogada', description: 'Chile poblano relleno de picadillo, ba침ado en salsa de nuez y granada.', price: 250, imageUrl: 'https://res.cloudinary.com/dsmzpsool/image/upload/v1755635606/chiles_nogada_h9k4qm.jpg', category: 'Especialidad', day: 'Especialidad' },
  { id: 'mock11', name: 'Cochinita Pibil', description: 'Carne de cerdo marinada en achiote, cocida lentamente y servida con cebolla morada.', price: 180, imageUrl: 'https://res.cloudinary.com/dsmzpsool/image/upload/v1755635607/cochinita_pibil_l0l1gq.jpg', category: 'Especialidad', day: 'Especialidad' },
];


let db: any;
try {
  // Solo inicializa Firebase si la configuraci칩n no es la de marcador de posici칩n
  if (firebaseConfig.apiKey && firebaseConfig.apiKey !== "AIzaSyCCuaPZhg4MtlTHV-JzDKEOiG1Lb3pVg4U") {
    const app = initializeApp(firebaseConfig);
    db = getFirestore(app);
  } else {
    console.warn("Usando configuraci칩n de Firebase de marcador de posici칩n. Se cargar치n los datos de muestra.");
  }
} catch (error) {
  console.error("Error al inicializar Firebase. Se usar치n datos de muestra.", error);
}


export const getMenuItems = async (): Promise<MenuItem[]> => {
  // Si la base de datos no se inicializ칩 (porque se us칩 la config de marcador de posici칩n), usa los datos de muestra.
  if (!db) {
    return new Promise(resolve => setTimeout(() => resolve(mockMenuItems), 500)); // Simula una carga de red
  }

  // Si la DB est치 inicializada, intenta obtener los datos reales.
  try {
    const productsCollection = collection(db, 'products');
    const productSnapshot = await getDocs(productsCollection);
    
    if (productSnapshot.empty) {
      console.warn("La colecci칩n 'products' en Firestore est치 vac칤a o no existe. Devolviendo datos de muestra.");
      return mockMenuItems;
    }

    const productList = productSnapshot.docs.map(doc => {
      const data = doc.data();
      return {
        id: doc.id,
        name: data.name || 'Sin Nombre',
        description: data.description || '',
        price: data.price || 0,
        imageUrl: data.imageUrl || '',
        category: data.category || 'Sin Categor칤a',
        day: data.day || 'Todos los d칤as',
      } as MenuItem;
    });
    return productList;
  } catch (error: any) {
      let specificAdvice = "Esto puede deberse a un problema de configuraci칩n o de conexi칩n de red.";

      if (error.code === 'permission-denied') {
          specificAdvice = "춰ERROR DE PERMISO DENEGADO! La causa m치s com칰n es que la URL de esta vista previa no est치 en tu lista de 'Authorized Domains' en la configuraci칩n de Authentication de Firebase. O bien, tus Reglas de Seguridad de Firestore no permiten la lectura p칰blica de la colecci칩n 'products'.";
      } else if (error.code === 'unauthenticated') {
          specificAdvice = "ERROR DE AUTENTICACI칍N. Revisa que tu API Key y la configuraci칩n del proyecto (firebaseConfig) sean correctas.";
      }

      console.error(`No se pudieron obtener los productos de Firebase. ${specificAdvice} Devolviendo datos de muestra.`, error);
      return mockMenuItems; // Devuelve datos de muestra como 칰ltimo recurso
  }
};